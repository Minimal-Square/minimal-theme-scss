{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<!-- Gallery & Product Form -->
<div data-section-id="{{ section.id }}" data-section-type="product" data-enable-history-state="true" itemscope>
  <div class="max-width mx-auto">
    <div class="grid grid-cols-1 lg:grid-cols-5 gap-8 sm:gap-10 mt-4">
      <div class="lg:col-span-3">
        <div class="flex mb-4">
          {% include 'breadcrumbs' %}
        </div>
        <div></div>
          <div class="main-carousel carousel mb-5" data-flickity='{ "cellAlign": "left", "contain": true, "prevNextButtons": false, "pageDots": true }'>
              {% for media in product.media %}
                <div class="carousel-cell aspect-w-1 aspect-h-1 w-full" >
                  <img class="object-cover lazy" src="{{ media | img_url: '1000x1000'}}" alt="{{ media.alt }}">
                </div>
              {% endfor %}
          </div>
          <div class="nav-carousel carousel" data-flickity='{ "cellAlign": "left", "contain": true, "prevNextButtons": false, "pageDots": false, "asNavFor": ".main-carousel" }'>
              {% for media in product.media %}
                <div class="carousel-cell carousel-width w-20 h-20 sm:w-24 sm:h-24">
                    <img class="object-cover h-full w-full" src="{{ media | img_url: '500x500'}}" alt="{{ media.alt }}">
                </div>
              {% endfor %}
          </div>

      </div>
      <div class="lg:col-span-2"> 
        {% include 'product-form' %}
        {% if section.settings.product_tabs_type == 'product' %}
        <div class="mt-8">
          {% include 'product-tabs' %}
        </div>
        {% endif %}
      </div>
    </div>
    <div class="mt-8 sm:mt-16">
      {% if section.settings.product_tabs_type == 'section' %}
        {% include 'product-tabs' %}
      {% endif %}
    </div>
  </div>
</div>

{% include 'sticky-add-to-cart' %}
<style>
  #shopify-section-{{ section.id }} .carousel-width {
    margin: 3px 12px 3px 3px;
    transition: all 0.2s ease;
  }

  #shopify-section-{{ section.id }} .nav-carousel .is-selected {
    outline: none;
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    -moz-border-radius: 4px;
    -webkit-border-radius: 4px;
  }

  #shopify-section-{{ section.id }} .flickity-page-dots {
    position: absolute;
  }
</style>

<script>
  var optionRadio1 = document.querySelectorAll('input[name="{{ product.options[0] | downcase }}"]');
  var optionRadio2 = document.querySelectorAll('input[name="{{ product.options[1] | downcase }}"]');
  var optionRadio3 = document.querySelectorAll('input[name="{{ product.options[2] | downcase }}"]');

  var addToCartButton = document.getElementById("add_to_cart");
 
  function decrement(event) {
    event.preventDefault();
    $('#quantity').val( function(i, oldval) {
      if (oldval > 1){
        return --oldval;
      } else {
        return oldval;
      }
        
    });
  }
  function increment(event) {
    event.preventDefault();
    $('#quantity').val( function(i, oldval) {
        return ++oldval;
    });
  } 

  function addCartUpdate(event) {
    event.preventDefault();
    var quantity = document.getElementById('quantity').value;
    addToCartButton.setAttribute("data-cart-quantity", quantity);
  }

  function eventFire(el, etype){
    if (el.fireEvent) {
      el.fireEvent('on' + etype);
    } else {
      var evObj = document.createEvent('Events');
      evObj.initEvent(etype, true, false);
      el.dispatchEvent(evObj);
    }
  }

  {% if product.options.size == 1 %}
  (function () {
    checked = false;

    for (var i = 0; i < optionRadio1.length; i++) {
        if (optionRadio1[i].checked) {
            checked = true;
            break;
        }
    }

    if (!checked) {
      optionRadio1[0].checked = true;
      eventFire(optionRadio1[0], 'click');
      updateProductInformation();
    }
  }());
  {% endif %}

  // Function to get the value of the checked radio button in the form.
  function getRadioVal(form, name) {
      var val;
      var radios = form.elements[name];
      for (var i=0, len=radios.length; i<len; i++) {
          if ( radios[i].checked ) {
              val = radios[i].value; 
              break;
          }
      }
      return val;
  }

  {% unless product.has_only_default_variant %}
    function changeRadioValue() {
          if (!(optionRadio1.checked) || !(optionRadio2.checked) {% if product.options[2] %} || !(optionRadio3.checked){% endif %}) {
            addToCartButton.disabled = true;
        } else {
            addToCartButton.disabled = false;
        }
    };

    function changeButton() {
      if (!(optionRadio1.checked) && !(optionRadio2.checked){% if product.options[2] %} && !(optionRadio3.checked){% endif %}) {
        addToCartButton.disabled = true;
      }
      else {
        addToCartButton.disabled = false;
      }
    };
    changeButton();
  {% endunless %}


  // Function runs every time a variant radio button or select dropdown changes.
  function updateProductInformation() {
    // Save the option select values
    {% for option in product.options %}
        var opt{{- forloop.index }} = getRadioVal( document.getElementById('product_form'), '{{ option | downcase }}' );
    {% endfor %}
    
    // Capture the quantity and save it as a liquid variable
    var quantity = document.getElementById('quantity').value;
    // document.getElementById('add_to_cart').setAttribute("data-cart-quantity", quantity);
    {% capture quantity %}quantity{% endcapture %}
    var id = '';
    var available;
    // Loop through all of the variants to check if the option values match any of the variant combinations
    {% for v in product.variants %}
      if(opt1=="{{ v.option1 }}"{% if product.options[1] %} && opt2=="{{ v.option2 }}"{% endif %}{% if product.options[2] %} && opt3=="{{ v.option3 }}"{% endif %}) {
        // Save the ID for the specific variant combination.
        var id = {{ v.id }};
        var available = {{ v.available }};
        // Save the price given the quantity the user has selected. Once multiplied then format the price using the js api.
        var fullPrice = {{ quantity }} * {{ v.price }};
        var price = Shopify.formatMoney({{v.price}}, "{{ shop.money_format }}");
        var formattedPrice = Shopify.formatMoney(fullPrice, "{{ shop.money_format }}" );
      }
    {% endfor %}
    // URL Query String
    // console.log(window.location.search);
    // If variant has an id then set the cart to the selected variant and change the price field.
    if(id!='') {
      addToCartButton.setAttribute('data-cart-add', id);
      document.getElementById('price').innerHTML = price;
      addToCartButton.disabled = true;

      if(available == false){
        addToCartButton.setAttribute('value', 'Sold Out');
        addToCartButton.disabled = true;
      } else if (available == true) {
        addToCartButton.setAttribute('value', 'Add To Cart');
        addToCartButton.disabled = false;
      }
      
    } else {
      addToCartButton.setAttribute('data-variant-id', id);
      addToCartButton.setAttribute('value', 'Choose Options');
      document.getElementById('price').innerHTML = 'Unavailable';
      addToCartButton.disabled = true;
    }
  }
  updateProductInformation()
  
</script>


{% schema %}
{
  "name": "Product tabs",
  "max_blocks": 4,
  "settings": [
    {
      "type": "select",
      "id": "product_tabs_type",
      "label": "Type",
      "default": "product",
      "options": [
        {
          "value": "product",
          "label": "Product"
        },
        {
          "value": "section",
          "label": "Section"
        }
      ]
    }
  ],
  "blocks": [
    {
      "name": "Product tab",
      "type": "product_tab",
      "settings": [
        {
          "type": "text",
          "id": "product_tab_heading",
          "label": "Heading",
          "default": "Free Shipping"
        },
        {
          "type": "textarea",
          "id": "product_tab_excerpt", 
          "label": "Excerpt",
          "default": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
        },
        {
          "type": "textarea",
          "id": "product_tab_text",
          "label": "Text",
          "default": "Lorem ipsum dolor asimet..."
        }
      ]
    }
  ]
}
{% endschema %}

